#!/usr/bin/env ruby
# frozen_string_literal: true

$stdout.sync = true

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)

require 'newport'

Newport::Help.show && abort if ARGV.length.zero? || ARGV[0] == 'help'

case ARGV[0]
when 'new'
  Newport::New.process ARGV
when 'build'
  Newport::Build.process ARGV
else
  Newport.logger.abort_with "fatal: 'newport #{ARGV.first}' could not be found.".red
end

# Mercenary.program(:newport) do |p|
#   p.version Newport::VERSION
#   p.description 'Newport is a static site blog generator written in Ruby'
#   p.syntax 'newport <command>'

#   Newport::Command.subclasses.each { |c| c.init_with_program(p) }

#   p.action do |args, _|
#     if args.empty?
#       Newport.logger.error 'A subcommand is required.'
#       abort
#     else
#       subcommand = args.first
#       Newport.logger.abort_with "fatal: 'newport #{args.first}' could not be found." unless p.has_command? subcommand
#     end
#   end
# end
